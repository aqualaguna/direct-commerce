---
import Card from '../ui/Card.astro';
import Button from '../ui/Button.astro';

export interface Props {
  categories: Array<{
    name: string;
    count: number;
    slug: string;
  }>;
  activeFilters: {
    categories: string[];
    priceRange: [number, number];
    attributes: string[];
  };
  class?: string;
}

const {
  categories = [],
  activeFilters = {
    categories: [],
    priceRange: [0, 1000],
    attributes: []
  },
  class: className = '',
} = Astro.props;

const brands = [
  { name: 'Apple', count: 12 },
  { name: 'Samsung', count: 8 },
  { name: 'Sony', count: 15 },
  { name: 'Bose', count: 6 },
  { name: 'JBL', count: 9 },
];

const colors = [
  { name: 'Black', count: 25, color: 'bg-gray-900' },
  { name: 'White', count: 18, color: 'bg-white border border-gray-300' },
  { name: 'Blue', count: 12, color: 'bg-blue-500' },
  { name: 'Red', count: 8, color: 'bg-red-500' },
  { name: 'Green', count: 6, color: 'bg-green-500' },
];

const sizes = [
  { name: 'XS', count: 5 },
  { name: 'S', count: 12 },
  { name: 'M', count: 18 },
  { name: 'L', count: 15 },
  { name: 'XL', count: 8 },
];
---

<Card variant="default" padding="lg" class={`space-y-6 ${className}`}>
  <!-- Header -->
  <div class="flex items-center justify-between">
    <h3 class="text-lg font-semibold text-gray-900">Filters</h3>
    <button class="text-sm text-primary-600 hover:text-primary-800 font-medium">
      Clear All
    </button>
  </div>

  <!-- Categories -->
  <div>
    <h4 class="text-sm font-medium text-gray-900 mb-3">Categories</h4>
    <div class="space-y-2">
      {categories.map(category => (
        <label class="flex items-center justify-between cursor-pointer group">
          <div class="flex items-center">
            <input
              type="checkbox"
              name="categories"
              value={category.slug}
              class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
              checked={activeFilters.categories.includes(category.slug)}
            />
            <span class="ml-3 text-sm text-gray-700 group-hover:text-gray-900">
              {category.name}
            </span>
          </div>
          <span class="text-sm text-gray-500">({category.count})</span>
        </label>
      ))}
    </div>
  </div>

  <!-- Price Range -->
  <div>
    <h4 class="text-sm font-medium text-gray-900 mb-3">Price Range</h4>
    <div class="space-y-4">
      <div class="flex items-center space-x-2">
        <input
          type="number"
          placeholder="Min"
          value={activeFilters.priceRange[0]}
          class="w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
        />
        <span class="text-gray-500">to</span>
        <input
          type="number"
          placeholder="Max"
          value={activeFilters.priceRange[1]}
          class="w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
        />
      </div>
      <div class="relative">
        <input
          type="range"
          min="0"
          max="1000"
          value={activeFilters.priceRange[1]}
          class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider"
        />
        <div class="flex justify-between text-xs text-gray-500 mt-1">
          <span>$0</span>
          <span>$1000+</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Brands -->
  <div>
    <h4 class="text-sm font-medium text-gray-900 mb-3">Brands</h4>
    <div class="space-y-2">
      {brands.map(brand => (
        <label class="flex items-center justify-between cursor-pointer group">
          <div class="flex items-center">
            <input
              type="checkbox"
              name="brands"
              value={brand.name}
              class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
            />
            <span class="ml-3 text-sm text-gray-700 group-hover:text-gray-900">
              {brand.name}
            </span>
          </div>
          <span class="text-sm text-gray-500">({brand.count})</span>
        </label>
      ))}
    </div>
  </div>

  <!-- Colors -->
  <div>
    <h4 class="text-sm font-medium text-gray-900 mb-3">Colors</h4>
    <div class="flex flex-wrap gap-2">
      {colors.map(color => (
        <label class="flex items-center cursor-pointer group">
          <input
            type="checkbox"
            name="colors"
            value={color.name}
            class="sr-only"
          />
          <div class={`w-8 h-8 rounded-full ${color.color} border-2 border-transparent group-hover:border-gray-400 transition-colors`}></div>
          <span class="ml-2 text-sm text-gray-700">({color.count})</span>
        </label>
      ))}
    </div>
  </div>

  <!-- Sizes -->
  <div>
    <h4 class="text-sm font-medium text-gray-900 mb-3">Sizes</h4>
    <div class="flex flex-wrap gap-2">
      {sizes.map(size => (
        <label class="flex items-center cursor-pointer group">
          <input
            type="checkbox"
            name="sizes"
            value={size.name}
            class="sr-only"
          />
          <div class="px-3 py-1 border border-gray-300 rounded text-sm text-gray-700 group-hover:border-primary-500 group-hover:text-primary-600 transition-colors">
            {size.name}
          </div>
          <span class="ml-1 text-sm text-gray-500">({size.count})</span>
        </label>
      ))}
    </div>
  </div>

  <!-- Rating -->
  <div>
    <h4 class="text-sm font-medium text-gray-900 mb-3">Customer Rating</h4>
    <div class="space-y-2">
      {[5, 4, 3, 2, 1].map(rating => (
        <label class="flex items-center cursor-pointer group">
          <input
            type="radio"
            name="rating"
            value={rating}
            class="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300"
          />
          <div class="ml-3 flex items-center">
            <div class="flex items-center">
              {Array.from({ length: 5 }).map((_, i) => (
                <svg
                  class={`w-4 h-4 ${i < rating ? 'text-yellow-400' : 'text-gray-300'}`}
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
              ))}
            </div>
            <span class="ml-2 text-sm text-gray-700">& up</span>
          </div>
        </label>
      ))}
    </div>
  </div>

  <!-- Apply Filters Button -->
  <div class="pt-4 border-t border-gray-200">
    <Button variant="primary" size="md" fullWidth={true}>
      Apply Filters
    </Button>
  </div>
</Card>

<style>
  .slider::-webkit-slider-thumb {
    appearance: none;
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: #3b82f6;
    cursor: pointer;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .slider::-moz-range-thumb {
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: #3b82f6;
    cursor: pointer;
    border: none;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
</style>
